{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Production ECS Host",
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EC2 security group for docker deployment",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "Production-VPC-VpcId"
          }
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "1",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "s3ConfigReadAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    "arn:aws:s3:::ptt-alertor-2-bucket",
                    "arn:aws:s3:::ptt-alertor-2-bucket/*"
                  ],
                  "Sid": "ConfigReadAccess"
                }
              ]
            }
          },
          {
            "PolicyName": "ecsAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecs:*",
                    "ecr:*",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "IamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "LaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-29f80351",
        "InstanceType": "t2.micro",
        "KeyName": "ecs",
        "SecurityGroups": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": {
          "Ref": "IamInstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n\nconfig_bucket=",
                "ptt-alertor-2-bucket",
                "\necho ECS_CLUSTER=",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": "Production-ECS-Cluster"
                  }
                },
                " > /etc/ecs/ecs.config\n\nyum install -y aws-cli\naws s3 cp s3://$config_bucket/.env.prod /etc/ecs/.env\n\nyum update -y\nyum install -y gcc-c++ make\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -\nyum install -y nodejs\n\nyum install -y wget \nwget http://download.redis.io/redis-stable.tar.gz && tar xvzf redis-stable.tar.gz && cd redis-stable && make\nnpm install redis-dump -g\n\nyum erase ntp*\nyum -y install chrony\nservice chronyd start"
              ]
            ]
          }
        }
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchConfigurationName": {
          "Ref": "LaunchConfiguration"
        },
        "AvailabilityZones": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "Production-VPC-AvailabilityZone-A"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "Production-VPC-AvailabilityZone-B"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "Production-VPC-AvailabilityZone-C"
            }
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "Production-VPC-PublicSubnet-A"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "Production-VPC-PublicSubnet-B"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "Production-VPC-PublicSubnet-C"
            }
          }
        ],
        "MaxSize": 2,
        "MinSize": 1,
        "DesiredCapacity": 1,
        "HealthCheckGracePeriod": 30,
        "HealthCheckType": "EC2",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Production",
                  "-ECS-host"
                ]
              ]
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "ImageId",
            "Value": "ami-29f80351",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "OldestInstance"
        ]
      }
    }
  },
  "Outputs": {
    "AutoScalingGroup": {
      "Value": { "Ref": "AutoScalingGroup" },
      "Description": "Name of Auto Scaling Group",
      "Export": {
        "Name": "Production-ECS-hosts-Auto-Scaling-Group"
      }
    }
  }
}