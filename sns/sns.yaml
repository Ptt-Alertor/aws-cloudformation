AWSTemplateFormatVersion: "2010-09-09"
Description: Simple Notification Service

Parameters:
  SlackWebhookURL:
    Type: String

Resources:
  LambdaSNSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LambdaSNSExecutionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref LambdaSNSExecutionRole

  SNStoSlackLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue: Ptt-Alertor-S3-Bucket-Name
        S3Key: lambdas/sns_to_slack.zip
      Description: SNS to Slack
      Environment:
        Variables:
          SLACK_CHANNEL: alarm
          SLACK_WEBHOOK_URL: !Ref SlackWebhookURL
      FunctionName: SNSToSlack
      Handler: sns_to_slack.lambda_handler
      Role:
        Fn::GetAtt:
          - LambdaSNSExecutionRole
          - Arn
      Runtime: python3.9
      Timeout: 60

  PttAlertorSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: PttAlertor
      Subscription:
        - Endpoint: !GetAtt SNStoSlackLambda.Arn
          Protocol: lambda
      TopicName: Ptt-Alertor-Alarm
Outputs:
  PttAlertorSNSTopicArn:
    Value: !Ref PttAlertorSNSTopic
    Description: Arn of Ptt Alertor SNS Topic
    Export:
      Name: Ptt-Alertor-SNS-Topic-Arn
