---
AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Service
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 security group for Application Load Balancer
      VpcId:
        Fn::ImportValue:
          Fn::Sub: VPC-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 1
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Ptt-Alertor
  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: Ptt-Alertor
      RetentionInDays: "400"
  EcsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  EcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: Ptt-Alertor
      TaskRoleArn: !GetAtt EcsTaskRole.Arn
      ExecutionRoleArn: !GetAtt EcsExecutionRole.Arn
      ContainerDefinitions:
        - Name: Ptt-Alertor
          Image:
            Fn::Sub: "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/ptt-alertor-repo:latest"
          Essential: true
          Cpu: 500
          Memory: 400
          PortMappings:
            - ContainerPort: 9090
              HostPort: 80
            - ContainerPort: 6379
              HostPort: 33008
            - ContainerPort: 6060
              HostPort: 33009
          EnvironmentFiles:
            - Type: s3
              Value: !Sub
                - ${S3}/.env
                - S3: !ImportValue Ptt-Alertor-S3-Bucket-Arn
          Environment:
            - Name: REDIS_PORT
              Value:
                Fn::ImportValue: Redis-Port
            - Name: AWS_REGION
              Value: !Ref "AWS::Region"
          Secrets:
            - Name: REDIS_ENDPOINT
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/RedisEndPoint
            - Name: S3_DOMAIN
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/S3DomainName
          EntryPoint:
            - ./ptt-alertor
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: !Ref AWS::Region
  EcsService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: Ptt-Alertor
      Cluster:
        Fn::ImportValue: ECS-Cluster
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: Ptt-Alertor
          ContainerPort: 9090
          LoadBalancerName: !Ref ElasticLoadBalancer
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref SecurityGroup
      CrossZone: true
      Subnets:
        - Fn::ImportValue: VPC-PublicSubnet-A
        - Fn::ImportValue: VPC-PublicSubnet-B
        - Fn::ImportValue: VPC-PublicSubnet-C
      Scheme: internet-facing
      Listeners:
        - LoadBalancerPort: 80
          InstancePort: 80
          Protocol: HTTP
          InstanceProtocol: HTTP
        - LoadBalancerPort: 443
          InstancePort: 80
          Protocol: SSL
          InstanceProtocol: TCP
          SSLCertificateId:
            Fn::ImportValue: DinoLai-Cert-Arn
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: 10
        UnhealthyThreshold: 2
        Interval: 30
        Timeout: 5
      LoadBalancerName: Ptt-Alertor-LB
      Tags:
        - Key: Name
          Value: Ptt-Alertor-LB
Outputs:
  EcsService:
    Value: !GetAtt EcsService.Name
    Description: name of ecs service
    Export:
      Name: ECS-Service-Name
  ElasticLoadBalancer:
    Value: !Ref ElasticLoadBalancer
    Description: name of elb
    Export:
      Name: Ptt-Alertor-ELB
  CloudWatchLogGroup:
    Value: !Ref CloudWatchLogGroup
    Description: name of log group
    Export:
      Name: Ptt-Alertor-LogGroup
  CloudWatchLogGroupArn:
    Value: !GetAtt CloudWatchLogGroup.Arn
    Description: arn of log group
    Export:
      Name: Ptt-Alertor-LogGroup-Arn
